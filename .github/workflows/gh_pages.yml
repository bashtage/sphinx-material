name: website

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{hashFiles('docs/environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        name: Install dependencies
        with:
          environment-file: docs/environment.yml
          activate-environment: docs
          auto-activate-base: false
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Install current theme in dev mode
        run: |
          pip install -e .

      - name: Describe environment
        run: |
          pwd
          ls
          conda list

      - name: Build Sphinx documentation
        run: |
          cd docs
          make html

      - name: Deploy main to GitHub Pages
        if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs/_build/html
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare PR subfolder
        if: success()
        env:
          PR: ${{ github.event.number }}
        run: |
          git checkout gh-pages
          rm -rf PR${PR}
          cp -r docs/_build/html/* PR${PR}/
          rm -rf docs/_build

      - name: Deploy PR to GitHub Pages
        if: success() && github.event_name == 'pull_request'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: .
          jekyll: false
          commit_message: "Deploy PR #${{ steps.findPr.outputs.pr }} to GH Pages"
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
